<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yongheonn.github.io/</id><title>YongHeon</title><subtitle>Yongheon's development blog</subtitle> <updated>2023-11-14T00:05:33+09:00</updated> <author> <name>yongheon</name> <uri>https://yongheonn.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yongheonn.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://yongheonn.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 yongheon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Liquid Exception: undefined method gsub for 502:Integer in</title><link href="https://yongheonn.github.io/posts/github_blog_issue/" rel="alternate" type="text/html" title="Liquid Exception: undefined method gsub for 502:Integer in" /><published>2023-11-13T22:00:00+09:00</published> <updated>2023-11-14T00:05:03+09:00</updated> <id>https://yongheonn.github.io/posts/github_blog_issue/</id> <content src="https://yongheonn.github.io/posts/github_blog_issue/" /> <author> <name>yongheon</name> </author> <category term="웹" /> <category term="개발 고민" /> <summary> 어느날 확인해본 결과 알게된 오류 오랜만에 커밋해두었던 블로그의 내용을 저장소에 푸쉬하였는데, 반영이 되지 않아서 캐시 문제라고 생각했었다. 그런데, 충분한 시간을 기다리고 캐시 사용을 중지하거나 강제로 새로고침하여도 반영되지 않아서 깃허브 action에서 빌드등의 오류가 생겼다 싶어서 확인하러 갔다. 아니나 다를까, 역시 깃허브 action에서 오류가 있었음을 확인할 수 있었는데, 저번 달에 푸쉬한 내역도 오류가 있었다. 확인을 안하고 넘어간 탓에 모르고 있었던 것이다. 그렇게 오류 내역을 찬찬히 살펴보는데, Liquid Exception: undefined method gsub' for 502:Integer in /home/runner/work/yongheonn.github.io/yongheon... </summary> </entry> <entry><title>갑작스러운 504 및 502 cors 에러</title><link href="https://yongheonn.github.io/posts/cors_issue/" rel="alternate" type="text/html" title="갑작스러운 504 및 502 cors 에러" /><published>2023-10-07T18:00:00+09:00</published> <updated>2023-11-13T22:33:55+09:00</updated> <id>https://yongheonn.github.io/posts/cors_issue/</id> <content src="https://yongheonn.github.io/posts/cors_issue/" /> <author> <name>yongheon</name> </author> <category term="웹" /> <category term="개발 고민" /> <summary> 어느날 갑자기 api 통신이 안되는 오류 발생 주기적으로 yongheonn.com 사이트를 점검하던 어는 날, 아무것도 건드린 적 없는데, 잘되던 사이트에 문제가 발생했다. 프론트 단의 사이트 자체는 문제가 없었으나 백엔드와의 통신이 먹통이 되었는지, 게시판 목록을 받지 못하고 있던 것이다. 그래서, 일단 개발자 도구를 통해 네트워크 탭을 확인했고, 504 에러를 확인했다. 그리고, 콘솔을 확인한 결과 yongheonn.com/:1 Access to fetch at 'https://api.yongheonn.com/ajax/subject/all' from origin 'https://yongheonn.com' has been blocked by CORS policy: Response to prefli... </summary> </entry> <entry><title>github 민감한 정보 관리</title><link href="https://yongheonn.github.io/posts/submodule/" rel="alternate" type="text/html" title="github 민감한 정보 관리" /><published>2023-05-04T07:00:00+09:00</published> <updated>2023-05-04T07:00:00+09:00</updated> <id>https://yongheonn.github.io/posts/submodule/</id> <content src="https://yongheonn.github.io/posts/submodule/" /> <author> <name>yongheon</name> </author> <category term="웹" /> <category term="개발 고민" /> <summary> git에서 민감한 정보 처리 spring에서 application.yml이나 application.properties등 민감한 정보를 관리할 때, .gitignore를 통해서 공개되지 않도록 한다. 로컬 개발 환경에서는 문제되지 않지만, 문제는 실제 프로덕션에 전달할 때이다. 이러한 때에는, submodule을 사용하면 좋다. secret key를 활용할 수도 있으나 너무 제한적이고, application.yml이나 application.properties와 같은 파일 형식에 적용하기는 힘들다. submodule을 사용하면 권한있는 사용자만 볼 수 있으며, github action에서도 해당 파일을 활용할 수 있으니 편리했다. 대신, 해당 push 내역을 반영하려면 git submodule upd... </summary> </entry> <entry><title>aws data transfer 트래픽 문제(폰트)</title><link href="https://yongheonn.github.io/posts/font-traffic/" rel="alternate" type="text/html" title="aws data transfer 트래픽 문제(폰트)" /><published>2023-04-12T02:00:00+09:00</published> <updated>2023-04-12T02:00:00+09:00</updated> <id>https://yongheonn.github.io/posts/font-traffic/</id> <content src="https://yongheonn.github.io/posts/font-traffic/" /> <author> <name>yongheon</name> </author> <category term="웹" /> <category term="개발 고민" /> <summary> aws data transfer 트래픽 이상 불과 하루도 안되어 프리티어 공짜 한도인 1gb 중 거의 700mb를 사용했다. 처음엔 해킹도 의심했지만 그렇다기엔 이상한 점이 한둘이 아니라, 이 트래픽을 추적하다보니 ttf 파일이 혼자 600mmb 정도 차지하고 있었다. ttf 파일은 리액트 프로젝트 생성시 자동으로 assets/font에 들어가 있었고, 정확히 이 폴더 내 용량 합이었다. 이 용량이 무려 13mb라 굉장히 트래픽에 부담되는 현상이 일어난 것이다. 이 때문에 웹사이트 로드도 굉장히 느려졌었고, 어떻게든 해결해야겠다고 생각했다. 처음엔 cdn을 활용해서 폰트를 서비스할까 생각했지만, 이 역시 전보단 훨씬 낫겠지만 지연이 발생하고, 앞으로 남은 한도를 생각하면 더 트래픽을 아낄 필... </summary> </entry> <entry><title>aws s3 정적 사이트 캐시 문제</title><link href="https://yongheonn.github.io/posts/cache_setting/" rel="alternate" type="text/html" title="aws s3 정적 사이트 캐시 문제" /><published>2023-04-12T02:00:00+09:00</published> <updated>2023-08-25T13:40:50+09:00</updated> <id>https://yongheonn.github.io/posts/cache_setting/</id> <content src="https://yongheonn.github.io/posts/cache_setting/" /> <author> <name>yongheon</name> </author> <category term="웹" /> <category term="개발 고민" /> <summary> html, css, js 캐시 문제 해결 기본적으로 리액트 빌드시 index.html은 그대로지만, static 폴더의 css와 js는 매번 파일명이 변경되어 새로 업로드된다. 여기에 어차피 html에서 로드할 css와 js가 결정되기에 css와 js의 캐시를 최대한 길게 잡아도 업데이트할 때는 새로운 css와 js가 적용되며, 업데이트되지 않았을 때 계속 캐시를 사용하는 최적화가 일어난다. 반면 index.html은 파일이름이 그대로여야 하기에 캐시를 길게 적용하기에 문제가 있다. 그렇기에 html에는 cache-control: private, no-cache로 css와 js는 cache-control: public, max-age: 31536000로 설정해주면 캐시 최적화가 더 잘된다. 나... </summary> </entry> </feed>
